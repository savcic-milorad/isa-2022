/**
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class was initially auto generated by the swagger code generator program,
 * and afterwards manually edited. 
 */
import { Injectable } from '@angular/core';
import { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { DonorPersonalInfoDto } from '../model/donorPersonalInfoDto';
import { Configuration } from '../configuration';

@Injectable()
export class DonorService {

    public defaultHeaders = new HttpHeaders({
        'Accept': 'application/json',
        'Content-Type': 'application/json'
    });

    constructor(protected httpClient: HttpClient, protected configuration: Configuration) {}

    /**
     * @param donorId 
     * @param reportProgress flag to report request and response progress.
     */
    public apiDonorDonorIdGet(donorId: number, reportProgress?: boolean): Observable<HttpResponse<DonorPersonalInfoDto>> {

        if (donorId === null || donorId === undefined) {
            throw new Error('Required parameter donorId was null or undefined when calling apiDonorDonorIdGet.');
        }

        return this.httpClient.request<DonorPersonalInfoDto>('get', `${this.configuration.basePath}/api/Donor/${encodeURIComponent(String(donorId))}`,
            {
                withCredentials: this.configuration.withCredentials,
                headers: this.defaultHeaders,
                observe: 'response',
                reportProgress: reportProgress
            }
        );
    }
}
